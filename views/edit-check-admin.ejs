<!-- Navbar -->
<%- include("./partials/navbar.ejs"); %>

<div id="wrapper">
    <%- include("./partials/sidebar.ejs"); %>

    <div id="content-wrapper">
        <div class="container-fluid">
            <!-- Breadcrumbs-->
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="/">Dashboard</a>
                </li>
                <li class="breadcrumb-item">
                    <a href="/emission">Checks</a>
                </li>
                <li class="breadcrumb-item active">Modify Check</li>
            </ol>

            <!-- Page Content -->
            <div class="row">
                <div class="col-lg-8">
                    <h1 class="page-header">Modify Check</h1>

                    <!-- Display error message if it exists -->
                    <% if (typeof errorMessage !== 'undefined') { %>
                        <div class="alert alert-danger">
                            <%= errorMessage %>
                        </div>
                    <% } %>

                    <form action="/checks/update/admin/<%= check.num %>" method="POST">
                        <div class="form-group">
                            <label for="amount">Amount</label>
                            <input type="number" step="0.01" class="form-control" id="amount" name="amount" value="<%= check.amount %>" required>
                        </div>
                        <div class="form-group">
                            <label for="beneficiary">Beneficiary</label>
                            <input type="text" class="form-control" id="beneficiary" name="beneficiary" value="<%= check.beneficiary %>" required>
                        </div>
                        <div class="form-group">
                            <label for="valueDate">Value Date</label>
                            <input type="date" class="form-control" id="valueDate" name="valueDate" value="<%= check.valuedate ? new Date(check.valuedate).toISOString().split('T')[0] : '' %>">
                        </div>
                        <div class="form-group">
                            <label for="bankCode">Bank</label>
                            <select id="bankCode" name="bankCode" class="form-control" onchange="updateAccounts(this.value)" required>
                                <option value="">Select Bank</option>
                                <% banks.forEach(bank => { %>
                                    <option value="<%= bank.code %>" <%= check.bankcode === bank.code ? 'selected' : '' %>><%= bank.name %></option>
                                <% }) %>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="accountNum">Account Number</label>
                            <select id="accountNum" name="accountNum" class="form-control" required>
                                <option value="">Select Account</option>
                                <% accounts.forEach(account => { %>
                                    <option value="<%= account.num %>" <%= check.accountnum === account.num ? 'selected' : '' %>><%= account.num %></option>
                                <% }) %>
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="entryDate">Entry Date</label>
                            <input type="date" class="form-control" id="entryDate" name="entryDate" value="<%= check.entrydate ? new Date(check.entrydate).toISOString().split('T')[0] : '' %>">
                        </div>
                        <div class="form-group">
                            <label for="issueDate">Issue Date</label>
                            <input type="date" class="form-control" id="issueDate" name="issueDate" value="<%= check.issuedate ? new Date(check.issuedate).toISOString().split('T')[0] : '' %>">
                        </div>
                        <div class="form-group">
                            <label for="type">Type</label>
                            <select id="type" name="type" class="form-control" required>
                                <option value="S" <%= check.type === 'S' ? 'selected' : '' %>>Supplier</option>
                                <option value="P" <%= check.type === 'P' ? 'selected' : '' %>>Personnel</option>
                                <option value="I" <%= check.type === 'I' ? 'selected' : '' %>>Intern</option>
                            </select>
                        </div>
                        <input type="hidden" name="updatedBy" value="<%= user.fullname %>">
                        <div class="form-group">
                            <button type="submit" class="btn btn-primary">Modify Check</button>
                            <a href="/emission" class="btn btn-secondary">Cancel</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <!-- /.container-fluid -->

        <!-- Sticky Footer -->
        <%- include("./partials/footer.ejs"); %>
    </div>
    <!-- /.content-wrapper -->
</div>
<!-- /#wrapper -->

<!-- Logout Modal-->
<%- include("./partials/logoutModel.ejs"); %>

<!-- AJAX Script to Update Accounts Dropdown -->
<script>
    async function updateAccounts(bankCode) {
        const accountSelect = document.getElementById('accountNum');

        if (bankCode) {
            try {
                const response = await fetch(`/accounts-by-bank?bankCode=${bankCode}`);
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                const data = await response.json();
                
                accountSelect.innerHTML = '<option value="">Select Account</option>'; // Clear existing options

                data.accounts.forEach(account => {
                    const option = document.createElement('option');
                    option.value = account.num;
                    option.textContent = account.num;
                    accountSelect.appendChild(option);
                });

                // Set the previously selected account value
                const selectedAccount = "<%= check.accountnum %>";
                if (selectedAccount) {
                    accountSelect.value = selectedAccount;
                }

            } catch (error) {
                console.error('Error fetching accounts:', error);
            }
        } else {
            accountSelect.innerHTML = '<option value="">Select Account</option>';
        }
    }

    // Pre-select bank and accounts on page load
    document.addEventListener('DOMContentLoaded', () => {
        const bankCode = "<%= check.bankcode %>";
        if (bankCode) {
            updateAccounts(bankCode).then(() => {
                // Select the correct bank and account on load
                document.getElementById('bankCode').value = bankCode;
                const accountNum = "<%= check.accountnum %>";
                if (accountNum) {
                    document.getElementById('accountNum').value = accountNum;
                }
            });
        }
    });
</script>




